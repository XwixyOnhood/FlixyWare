local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v96=0;local v97;while true do if (v96==1) then return v97;end if (v96==0) then v97=v5(v84,v19);v19=nil;v96=1;end end else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=(v31/((5 -(1 + 2))^(v32-1)))%((5 -3)^(((v33-(1 -0)) -(v32-1)) + ((1 + 1) -1))) ;return v85-(v85%(620 -(555 + 64))) ;else local v86=(933 -(857 + 74))^(v32-(569 -(367 + (1078 -(282 + 595))))) ;return (((v31%(v86 + v86))>=v86) and (928 -(214 + 713))) or (1637 -(1523 + 114)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==1) then return (v37 * (364 -108)) + v36 ;end if (v35==(1065 -(68 + 997))) then v36,v37=v1(v16,v18,v18 + (1272 -(222 + 4 + 1044)) );v18=v18 + (8 -(2 + 4)) ;v35=118 -(32 + (1042 -(892 + 65))) ;end end end local function v23() local v38=(0 -0) -0 ;local v39;local v40;local v41;local v42;while true do if (v38==1) then return (v42 * 16777216) + (v41 * (121138 -(40893 + 14709))) + (v40 * (1017 -761)) + v39 ;end if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (353 -((1039 -(802 + 150)) + 263)) );v18=v18 + (184 -(67 + 113)) ;v38=1 + 0 ;end end end local function v24() local v43=v23();local v44=v23();local v45=2 -1 ;local v46=(v20(v44,1,36 -16 ) * ((2 + 0)^(1029 -(915 + 82)))) + v43 ;local v47=v20(v44,59 -38 ,(60 -41) + 12 );local v48=((v20(v44,32)==(1 -0)) and  -(1188 -(459 + 610 + 118))) or (2 -1) ;if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * 0 ;else v47=1 -0 ;v45=0 + 0 ;end elseif (v47==(2838 -(368 + (747 -324)))) then return ((v46==0) and (v48 * (((441 -(145 + 293)) -2)/0))) or (v48 * NaN) ;end return v8(v48,v47-(1041 -(10 + (438 -(44 + 386)))) ) * (v45 + (v46/((7 -5)^(494 -(416 + 26))))) ;end local function v25(v49) local v50;if  not v49 then local v87=0 + 0 ;while true do if (v87==(772 -((733 -532) + 571))) then v49=v23();if (v49==(1486 -(998 + 488))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v65=1 + 0 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=584 -(57 + 527) ;local v68;while true do if (v67==(1427 -(41 + 1386))) then v68=0 -0 ;while true do if (v68==0) then if (v52==(105 -(17 + 86))) then local v98=0 -0 ;while true do if (v98==(0 + 0)) then for v103=1 + 0 ,v23() do local v104=396 -(115 + 281) ;local v105;local v106;while true do if (v104~=(0 -0)) then else v105=0;v106=nil;v104=1 -0 ;end if ((1 + 0)~=v104) then else while true do if (v105~=(0 -0)) then else v106=v21();if (v20(v106,1,1)==(0 -0)) then local v222=0 + 0 ;local v223;local v224;local v225;local v226;local v227;local v228;while true do if (v222~=(10 -7)) then else while true do if (v223~=(3 -1)) then else v228=nil;while true do if (v224==1) then local v232=867 -(550 + 317) ;while true do if (1~=v232) then else v224=67 -(30 + 35) ;break;end if (v232==(0 -0)) then v227=nil;v228=nil;v232=1 -0 ;end end end if (v224~=0) then else local v233=1257 -(1043 + 214) ;while true do if (v233==1) then v224=1;break;end if (v233==(0 -0)) then v225=0;v226=nil;v233=286 -(134 + 151) ;end end end if (v224~=(1667 -(970 + 695))) then else while true do if (v225==(5 -2)) then if (v20(v227,1993 -(582 + 1408) ,10 -7 )~=(1 -0)) then else v228[324 -(53 + 267) ]=v58[v228[4]];end v53[v103]=v228;break;end if (v225~=(3 -2)) then else local v235=0;local v236;while true do if (v235~=(1824 -(1195 + 629))) then else v236=0 -0 ;while true do if (v236==(0 + 0)) then local v244=0;local v245;while true do if (v244~=(241 -(187 + 54))) then else v245=780 -(162 + 618) ;while true do if (0==v245) then v228={v22(),v22(),nil,nil};if (v226==0) then local v250=0 -0 ;while true do if ((0 -0)~=v250) then else v228[3]=v22();v228[1 + 3 ]=v22();break;end end elseif (v226==(1637 -(1373 + 263))) then v228[2 + 1 ]=v23();elseif (v226==(2 + 0)) then v228[853 -(20 + 830) ]=v23() -((2 + 0)^(1016 -(451 + 549))) ;elseif (v226~=(1 + 2)) then else local v255=0;while true do if (v255==0) then v228[741 -(542 + 196) ]=v23() -((2 -0)^(26 -10)) ;v228[1388 -(746 + 638) ]=v22();break;end end end v245=1 + 0 ;end if ((1 -0)~=v245) then else v236=342 -(218 + 123) ;break;end end break;end end end if ((1582 -(1535 + 46))==v236) then v225=4 -2 ;break;end end break;end end end if ((0 + 0)==v225) then local v237=0 + 0 ;local v238;while true do if (v237~=0) then else v238=560 -(306 + 254) ;while true do if (v238~=0) then else v226=v20(v106,1 + 1 ,3);v227=v20(v106,409 -(118 + 287) ,11 -5 );v238=1;end if (v238==(1468 -(899 + 568))) then v225=1 + 0 ;break;end end break;end end end if ((1123 -(118 + 1003))~=v225) then else local v239=0 -0 ;local v240;local v241;while true do if (v239~=(377 -(142 + 235))) then else v240=0;v241=nil;v239=604 -(268 + 335) ;end if (v239~=(291 -(60 + 230))) then else while true do if (v240==0) then v241=977 -(553 + 424) ;while true do if ((0 -0)==v241) then if (v20(v227,573 -(426 + 146) ,1 + 0 )~=(1457 -(282 + 1174))) then else v228[2]=v58[v228[813 -(569 + 242) ]];end if (v20(v227,1 + 1 ,2 + 0 )~=1) then else v228[3]=v58[v228[6 -3 ]];end v241=2 -1 ;end if (v241==(2 -1)) then v225=1 + 2 ;break;end end break;end end break;end end end end break;end end break;end if (v223==0) then local v230=0 -0 ;while true do if ((753 -(239 + 514))~=v230) then else v224=0 + 0 ;v225=nil;v230=1025 -(706 + 318) ;end if ((1252 -(721 + 530))~=v230) then else v223=1272 -(945 + 326) ;break;end end end if (1~=v223) then else local v231=0;while true do if (v231~=(0 -0)) then else v226=nil;v227=nil;v231=1 + 0 ;end if (v231==1) then v223=2;break;end end end end break;end if ((702 -(271 + 429))==v222) then v227=nil;v228=nil;v222=3 + 0 ;end if (v222~=1) then else v225=nil;v226=nil;v222=2;end if (v222~=(1202 -(373 + 829))) then else v223=1500 -(1408 + 92) ;v224=nil;v222=1131 -(369 + 761) ;end end end break;end end break;end end end for v107=1,v23() do v54[v107-1 ]=v28();end v98=1087 -(461 + 625) ;end if (v98~=1) then else return v56;end end end if (v52~=(1289 -(993 + 295))) then else local v99=0 + 0 ;while true do if (v99~=2) then else v52=1173 -(418 + 753) ;break;end if (v99==0) then v57=v23();v58={};v99=1;end if (v99~=(1 + 0)) then else for v109=1 + 0 ,v57 do local v110=0 + 0 ;local v111;local v112;local v113;while true do if (v110==(0 + 0)) then v111=529 -(406 + 123) ;v112=nil;v110=1;end if (v110==1) then v113=nil;while true do if (v111==(217 -(42 + 174))) then if (v112==1) then v113=v21()~=(1769 -(1749 + 20)) ;elseif (v112==(2 + 0)) then v113=v24();elseif (v112~=(1 + 2)) then else v113=v25();end v58[v109]=v113;break;end if (v111==0) then v112=v21();v113=nil;v111=1 + 0 ;end end break;end end end v56[1325 -(1249 + 73) ]=v21();v99=2;end end end v68=1 + 0 ;end if ((1146 -(466 + 679))~=v68) then else if (0~=v52) then else local v100=0 -0 ;local v101;while true do if (v100==0) then v101=0 -0 ;while true do if (v101~=1) then else local v114=0 -0 ;while true do if (1==v114) then v101=2 + 0 ;break;end if (v114~=(1975 -(1913 + 62))) then else v55={};v56={v53,v54,nil,v55};v114=1 + 0 ;end end end if (v101==(1935 -(565 + 1368))) then v52=3 -2 ;break;end if (v101==(0 -0)) then local v115=0 -0 ;while true do if (v115==(1 -0)) then v101=1;break;end if (v115==(114 -(4 + 110))) then v53={};v54={};v115=1 + 0 ;end end end end break;end end end break;end end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v69=v62;local v70=v63;local v71=v64;local v72=v27;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v88=0,v77 do if (v88>=v71) then v75[v88-v71 ]=v76[v88 + 1 ];else v79[v88]=v76[v88 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do local v89=0;while true do if (1==v89) then if (v82<=21) then if (v82<=10) then if (v82<=4) then if (v82<=1) then if (v82>0) then do return;end else v79[v81[2]][v81[3]]=v81[4];end elseif (v82<=2) then v73=v81[3];elseif (v82==3) then v79[v81[2]]=v79[v81[3]][v81[4]];else local v158=v81[2];v79[v158](v79[v158 + 1 ]);end elseif (v82<=7) then if (v82<=5) then local v119=0;local v120;while true do if (v119==0) then v120=v81[2];v79[v120]=v79[v120](v13(v79,v120 + 1 ,v74));break;end end elseif (v82==6) then v79[v81[2]]=v81[3]~=0 ;else v79[v81[2]]={};end elseif (v82<=8) then local v121=v81[2];v79[v121]=v79[v121](v13(v79,v121 + 1 ,v81[3]));elseif (v82>9) then local v161=0;local v162;while true do if (0==v161) then v162=v81[2];v79[v162]=v79[v162]();break;end end else for v201=v81[2],v81[3] do v79[v201]=nil;end end elseif (v82<=15) then if (v82<=12) then if (v82>11) then v73=v81[3];else v79[v81[2]]=v29(v70[v81[3]],nil,v61);end elseif (v82<=13) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end elseif (v82>14) then local v164=0;local v165;local v166;while true do if (v164==1) then for v229=v165 + 1 ,v81[3] do v7(v166,v79[v229]);end break;end if (v164==0) then v165=v81[2];v166=v79[v165];v164=1;end end else local v167=v81[2];local v168=v79[v81[3]];v79[v167 + 1 ]=v168;v79[v167]=v168[v81[4]];end elseif (v82<=18) then if (v82<=16) then v79[v81[2]][v81[3]]=v79[v81[4]];elseif (v82>17) then v79[v81[2]][v81[3]]=v79[v81[4]];else v79[v81[2]]={};end elseif (v82<=19) then local v127=0;local v128;while true do if (v127==0) then v128=v81[2];v79[v128]=v79[v128](v13(v79,v128 + 1 ,v81[3]));break;end end elseif (v82==20) then v79[v81[2]]=v29(v70[v81[3]],nil,v61);else local v176=v81[2];v79[v176](v79[v176 + 1 ]);end elseif (v82<=32) then if (v82<=26) then if (v82<=23) then if (v82==22) then local v129=0;local v130;while true do if (v129==0) then v130=v81[2];v79[v130]=v79[v130]();break;end end else local v131=v81[2];local v132,v133=v72(v79[v131](v13(v79,v131 + 1 ,v81[3])));v74=(v133 + v131) -1 ;local v134=0;for v150=v131,v74 do v134=v134 + 1 ;v79[v150]=v132[v134];end end elseif (v82<=24) then v79[v81[2]]=v79[v81[3]][v81[4]];elseif (v82==25) then local v177=v81[2];local v178=v79[v177];local v179=v81[3];for v207=1,v179 do v178[v207]=v79[v177 + v207 ];end else local v180=v81[2];local v181=v79[v180];local v182=v81[3];for v210=1,v182 do v181[v210]=v79[v180 + v210 ];end end elseif (v82<=29) then if (v82<=27) then v79[v81[2]]=v61[v81[3]];elseif (v82>28) then local v183=0;local v184;while true do if (v183==0) then v184=v81[2];v79[v184](v13(v79,v184 + 1 ,v81[3]));break;end end else v79[v81[2]]=v61[v81[3]];end elseif (v82<=30) then v79[v81[2]]();elseif (v82==31) then v79[v81[2]][v81[3]]=v81[4];else v79[v81[2]]=v81[3];end elseif (v82<=38) then if (v82<=35) then if (v82<=33) then local v139=v81[2];local v140,v141=v72(v79[v139](v13(v79,v139 + 1 ,v81[3])));v74=(v141 + v139) -1 ;local v142=0;for v153=v139,v74 do v142=v142 + 1 ;v79[v153]=v140[v142];end elseif (v82>34) then v79[v81[2]]=v81[3];else local v193=v81[2];v79[v193](v13(v79,v193 + 1 ,v81[3]));end elseif (v82<=36) then v79[v81[2]]=v79[v81[3]];elseif (v82==37) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else for v213=v81[2],v81[3] do v79[v213]=nil;end end elseif (v82<=41) then if (v82<=39) then local v145=v81[2];local v146=v79[v81[3]];v79[v145 + 1 ]=v146;v79[v145]=v146[v81[4]];elseif (v82==40) then local v194=v81[2];v79[v194]=v79[v194](v13(v79,v194 + 1 ,v74));else v79[v81[2]]=v79[v81[3]];end elseif (v82<=42) then v79[v81[2]]();elseif (v82==43) then v79[v81[2]]=v81[3]~=0 ;else do return;end end v73=v73 + 1 ;break;end if (0==v89) then v81=v69[v73];v82=v81[1];v89=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
